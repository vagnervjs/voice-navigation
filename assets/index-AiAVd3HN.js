(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const n of o)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function t(o){const n={};return o.integrity&&(n.integrity=o.integrity),o.referrerPolicy&&(n.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?n.credentials="include":o.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(o){if(o.ep)return;o.ep=!0;const n=t(o);fetch(o.href,n)}})();function k(s,e,t,i){function o(n){return n instanceof t?n:new t(function(a){a(n)})}return new(t||(t=Promise))(function(n,a){function c(h){try{p(i.next(h))}catch(d){a(d)}}function u(h){try{p(i.throw(h))}catch(d){a(d)}}function p(h){h.done?n(h.value):o(h.value).then(c,u)}p((i=i.apply(s,[])).next())})}function V(s){return s&&s.__esModule&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s}var U=function s(e,t){if(e===t)return!0;if(e&&t&&typeof e=="object"&&typeof t=="object"){if(e.constructor!==t.constructor)return!1;var i,o,n;if(Array.isArray(e)){if(i=e.length,i!=t.length)return!1;for(o=i;o--!==0;)if(!s(e[o],t[o]))return!1;return!0}if(e.constructor===RegExp)return e.source===t.source&&e.flags===t.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===t.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===t.toString();if(n=Object.keys(e),i=n.length,i!==Object.keys(t).length)return!1;for(o=i;o--!==0;)if(!Object.prototype.hasOwnProperty.call(t,n[o]))return!1;for(o=i;o--!==0;){var a=n[o];if(!s(e[a],t[a]))return!1}return!0}return e!==e&&t!==t},$=V(U);const T="__googleMapsScriptId";var m;(function(s){s[s.INITIALIZED=0]="INITIALIZED",s[s.LOADING=1]="LOADING",s[s.SUCCESS=2]="SUCCESS",s[s.FAILURE=3]="FAILURE"})(m||(m={}));class f{constructor({apiKey:e,authReferrerPolicy:t,channel:i,client:o,id:n=T,language:a,libraries:c=[],mapIds:u,nonce:p,region:h,retries:d=3,url:g="https://maps.googleapis.com/maps/api/js",version:E}){if(this.callbacks=[],this.done=!1,this.loading=!1,this.errors=[],this.apiKey=e,this.authReferrerPolicy=t,this.channel=i,this.client=o,this.id=n||T,this.language=a,this.libraries=c,this.mapIds=u,this.nonce=p,this.region=h,this.retries=d,this.url=g,this.version=E,f.instance){if(!$(this.options,f.instance.options))throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(f.instance.options)}`);return f.instance}f.instance=this}get options(){return{version:this.version,apiKey:this.apiKey,channel:this.channel,client:this.client,id:this.id,libraries:this.libraries,language:this.language,region:this.region,mapIds:this.mapIds,nonce:this.nonce,url:this.url,authReferrerPolicy:this.authReferrerPolicy}}get status(){return this.errors.length?m.FAILURE:this.done?m.SUCCESS:this.loading?m.LOADING:m.INITIALIZED}get failed(){return this.done&&!this.loading&&this.errors.length>=this.retries+1}createUrl(){let e=this.url;return e+="?callback=__googleMapsCallback&loading=async",this.apiKey&&(e+=`&key=${this.apiKey}`),this.channel&&(e+=`&channel=${this.channel}`),this.client&&(e+=`&client=${this.client}`),this.libraries.length>0&&(e+=`&libraries=${this.libraries.join(",")}`),this.language&&(e+=`&language=${this.language}`),this.region&&(e+=`&region=${this.region}`),this.version&&(e+=`&v=${this.version}`),this.mapIds&&(e+=`&map_ids=${this.mapIds.join(",")}`),this.authReferrerPolicy&&(e+=`&auth_referrer_policy=${this.authReferrerPolicy}`),e}deleteScript(){const e=document.getElementById(this.id);e&&e.remove()}load(){return this.loadPromise()}loadPromise(){return new Promise((e,t)=>{this.loadCallback(i=>{i?t(i.error):e(window.google)})})}importLibrary(e){return this.execute(),google.maps.importLibrary(e)}loadCallback(e){this.callbacks.push(e),this.execute()}setScript(){var e,t;if(document.getElementById(this.id)){this.callback();return}const i={key:this.apiKey,channel:this.channel,client:this.client,libraries:this.libraries.length&&this.libraries,v:this.version,mapIds:this.mapIds,language:this.language,region:this.region,authReferrerPolicy:this.authReferrerPolicy};Object.keys(i).forEach(n=>!i[n]&&delete i[n]),!((t=(e=window==null?void 0:window.google)===null||e===void 0?void 0:e.maps)===null||t===void 0)&&t.importLibrary||(n=>{let a,c,u,p="The Google Maps JavaScript API",h="google",d="importLibrary",g="__ib__",E=document,O=window;O=O[h]||(O[h]={});const b=O.maps||(O.maps={}),w=new Set,_=new URLSearchParams,N=()=>a||(a=new Promise((y,A)=>k(this,void 0,void 0,function*(){var v;yield c=E.createElement("script"),c.id=this.id,_.set("libraries",[...w]+"");for(u in n)_.set(u.replace(/[A-Z]/g,G=>"_"+G[0].toLowerCase()),n[u]);_.set("callback",h+".maps."+g),c.src=this.url+"?"+_,b[g]=y,c.onerror=()=>a=A(Error(p+" could not load.")),c.nonce=this.nonce||((v=E.querySelector("script[nonce]"))===null||v===void 0?void 0:v.nonce)||"",E.head.append(c)})));b[d]?console.warn(p+" only loads once. Ignoring:",n):b[d]=(y,...A)=>w.add(y)&&N().then(()=>b[d](y,...A))})(i);const o=this.libraries.map(n=>this.importLibrary(n));o.length||o.push(this.importLibrary("core")),Promise.all(o).then(()=>this.callback(),n=>{const a=new ErrorEvent("error",{error:n});this.loadErrorCallback(a)})}reset(){this.deleteScript(),this.done=!1,this.loading=!1,this.errors=[],this.onerrorEvent=null}resetIfRetryingFailed(){this.failed&&this.reset()}loadErrorCallback(e){if(this.errors.push(e),this.errors.length<=this.retries){const t=this.errors.length*Math.pow(2,this.errors.length);console.error(`Failed to load Google Maps script, retrying in ${t} ms.`),setTimeout(()=>{this.deleteScript(),this.setScript()},t)}else this.onerrorEvent=e,this.callback()}callback(){this.done=!0,this.loading=!1,this.callbacks.forEach(e=>{e(this.onerrorEvent)}),this.callbacks=[]}execute(){if(this.resetIfRetryingFailed(),!this.loading)if(this.done)this.callback();else{if(window.google&&window.google.maps&&window.google.maps.version){console.warn("Google Maps already loaded outside @googlemaps/js-api-loader. This may result in undesirable behavior as options and script parameters may not match."),this.callback();return}this.loading=!0,this.setScript()}}}const L={SYSTEM:{label:"System",icon:"üöÄ",color:"#4f46e5"},MAPS:{label:"Maps",icon:"üó∫Ô∏è",color:"#16a34a"},VOICE:{label:"Voice",icon:"üé§",color:"#7c3aed"},SEARCH:{label:"Search",icon:"üîç",color:"#ca8a04"},LOCATION:{label:"Location",icon:"üìç",color:"#0891b2"},ERROR:{label:"Error",icon:"‚ùå",color:"#dc2626"}};let I="ALL",S=!1;function D(){const s=document.querySelector("#log");if(!s||S)return;const e=s.querySelector("h3");if(!e)return;const t=document.createElement("div");t.className="log-header";const i=document.createElement("div");i.className="log-content",t.appendChild(e);const o=document.createElement("div");o.className="log-filters",o.innerHTML=`
    <div class="filter-buttons">
      <button class="filter-btn active" data-filter="ALL" title="Show all log entries">All</button>
      ${Object.entries(L).map(([a,c])=>`<button class="filter-btn" data-filter="${a}" title="Show ${c.label} logs only">${c.icon}</button>`).join("")}
    </div>
  `,t.appendChild(o),Array.from(s.querySelectorAll("p")).forEach(a=>i.appendChild(a)),s.innerHTML="",s.appendChild(t),s.appendChild(i),S=!0,o.addEventListener("click",a=>{a.target.classList.contains("filter-btn")&&F(a.target)})}function F(s){I=s.dataset.filter,document.querySelectorAll(".filter-btn").forEach(i=>{i.classList.remove("active")}),s.classList.add("active"),M()}function M(){const s=document.querySelector(".log-content");if(!s)return;s.querySelectorAll(".log-entry").forEach(t=>{if(I==="ALL")t.style.display="block";else{const i=`log-${I.toLowerCase()}`;t.classList.contains(i)?t.style.display="block":t.style.display="none"}})}function r(s,e="SYSTEM",t=null){L[e]||(console.warn(`Invalid log category: ${e}. Using SYSTEM instead.`),e="SYSTEM");let i=document.querySelector(".log-content");if(i||(i=document.querySelector("#log")),i){const o=document.createElement("p");o.textContent=s;const n=L[e].color;o.style.borderLeft=`3px solid ${n}`,o.style.paddingLeft="8px",o.style.marginLeft="0",o.style.marginBottom="4px",t?o.style.color=t:e==="ERROR"&&(o.style.color="#dc2626"),o.className=`log-entry log-${e.toLowerCase()}`,I!=="ALL"&&I!==e&&(o.style.display="none"),i.appendChild(o),i.scrollTop=i.scrollHeight}S||setTimeout(()=>{D()},50)}function x(){D(),S&&M()}const l={VOICE_RECOGNITION:{LANGUAGE:"en-US",CONFIDENCE_THRESHOLD:parseFloat(void 0)||.6,MAX_ALTERNATIVES:3,CONTINUOUS:!0,INTERIM_RESULTS:!1},MAPS:{DEFAULT_ZOOM:parseInt(void 0)||100,POSITION_RATE:1e-4,POV_RATE:5,FAST_MODE_MULTIPLIER:5},KEYBOARD_CODES:{START_VOICE:83,STOP_VOICE:69,ENTER:13,ARROW_UP:38,ARROW_DOWN:40,ARROW_LEFT:37,ARROW_RIGHT:39,H:72,J:74,N:78,M:77},GEOLOCATION:{TIMEOUT:parseInt(void 0)||1e4,MAXIMUM_AGE:3e5,ENABLE_HIGH_ACCURACY:!0},API:{GEOCODING_BASE_URL:"https://maps.googleapis.com/maps/api/geocode/json",GOOGLE_MAPS:{API_KEY:void 0,VERSION:"weekly",LIBRARIES:["maps","streetView"]}}},H=[{regex:/\b(go|forward|move forward|ahead)\b/,code:"MOVE_FORWARD",label:"move forward"},{regex:/\b(back|backward|move back|retreat)\b/,code:"MOVE_BACKWARD",label:"move backward"},{regex:/\b(left|move left)\b/,code:"MOVE_LEFT",label:"move left"},{regex:/\b(right|move right)\b/,code:"MOVE_RIGHT",label:"move right"},{regex:/\b(turn left|rotate left|spin left)\b/,code:"TURN_LEFT",label:"turn left"},{regex:/\b(turn right|rotate right|spin right)\b/,code:"TURN_RIGHT",label:"turn right"},{regex:/\b(rotate|spin around)\b/,code:"TURN_LEFT",label:"rotate"},{regex:/\b(look up|up|tilt up)\b/,code:"LOOK_UP",label:"look up"},{regex:/\b(look down|down|tilt down)\b/,code:"LOOK_DOWN",label:"look down"},{regex:/\b(north|go north)\b/,code:"GO_NORTH",label:"go north"},{regex:/\b(south|go south)\b/,code:"GO_SOUTH",label:"go south"},{regex:/\b(east|go east)\b/,code:"GO_EAST",label:"go east"},{regex:/\b(west|go west)\b/,code:"GO_WEST",label:"go west"},{regex:/\b(stop|halt|pause)\b/,code:"STOP",label:"stop"}],K=()=>{var s;return((s=document.getElementById("fast-mode-checkbox"))==null?void 0:s.checked)||!1},P=s=>{const e=(s==null?void 0:s.nodeType)===1?s.nodeName.toLowerCase():"";return/input|select|textarea/.test(e)},j=s=>s*Math.PI/180,C=(s,e)=>`(${s.toFixed(5)}, ${e.toFixed(5)})`,q=(s=1)=>K()?s*5:s,Y=(s,e)=>{const t=s.replace(/\s+/g,"+");return`${l.API.GEOCODING_BASE_URL}?address=${t}&key=${e}`};class z{constructor(){this.viewDirection={heading:0,pitch:0},this.googleMapsInstances=null,this.mapData=null}init(e,t){try{this.viewDirection={heading:0,pitch:0},this.googleMapsInstances=this._createMapInstances(e,t),this.mapData={lat:e,lng:t,pov:this.viewDirection,positionRate:l.MAPS.POSITION_RATE,povRate:l.MAPS.POV_RATE},this._setupKeyboardListeners(),r(`üó∫Ô∏è Maps initialized at ${C(e,t)}`,"MAPS")}catch(i){throw r(`‚ùå Failed to initialize maps: ${i.message}`,"ERROR"),i}}_createMapInstances(e,t){const i=document.querySelector("#map"),o=document.querySelector("#street-view");if(!i||!o)throw new Error("Map containers not found");const n=new google.maps.LatLng(e,t),a=new google.maps.Map(i,{zoom:l.MAPS.DEFAULT_ZOOM,center:n}),c=new google.maps.StreetViewPanorama(o,{position:n,pov:this.viewDirection});return{map:a,streetView:c}}updatePosition(){if(!this.googleMapsInstances||!this.mapData)return;const e=new google.maps.LatLng(this.mapData.lat,this.mapData.lng);this.googleMapsInstances.map.panTo(e),this.googleMapsInstances.streetView.setPosition(e)}updateViewDirection(){if(!this.googleMapsInstances)return;const e=this.googleMapsInstances.streetView.getPov();e.heading=this.viewDirection.heading,e.pitch=this.viewDirection.pitch,this.googleMapsInstances.streetView.setPov(e)}executeVoiceCommand(e,t=1){if(!this.mapData)return;const i=this.mapData.positionRate*t,o=this.mapData.povRate*t;switch(e){case"MOVE_FORWARD":this._moveInDirection(this.viewDirection.heading,i);break;case"MOVE_BACKWARD":this._moveInDirection(this.viewDirection.heading+180,i);break;case"MOVE_LEFT":this._moveInDirection(this.viewDirection.heading-90,i);break;case"MOVE_RIGHT":this._moveInDirection(this.viewDirection.heading+90,i);break;case"TURN_LEFT":this._adjustHeading(-o);break;case"TURN_RIGHT":this._adjustHeading(o);break;case"LOOK_UP":this._adjustPitch(o);break;case"LOOK_DOWN":this._adjustPitch(-o);break;case"GO_NORTH":this.mapData.lat+=i;break;case"GO_SOUTH":this.mapData.lat-=i;break;case"GO_EAST":this.mapData.lng+=i;break;case"GO_WEST":this.mapData.lng-=i;break}this.updatePosition(),this.updateViewDirection()}_moveInDirection(e,t){const i=j(e);this.mapData.lat+=Math.cos(i)*t,this.mapData.lng+=Math.sin(i)*t}_adjustHeading(e){this.viewDirection.heading+=e,this.mapData.pov.heading=this.viewDirection.heading}_adjustPitch(e){this.viewDirection.pitch=Math.max(-90,Math.min(90,this.viewDirection.pitch+e)),this.mapData.pov.pitch=this.viewDirection.pitch}handleKeyboardInput(e,t=1){if(!this.mapData)return;const{ARROW_UP:i,ARROW_DOWN:o,ARROW_LEFT:n,ARROW_RIGHT:a,H:c,J:u,N:p,M:h}=l.KEYBOARD_CODES,d=this.mapData.positionRate*t,g=this.mapData.povRate*t;switch(e){case o:this.mapData.lat-=d;break;case i:this.mapData.lat+=d;break;case c:this.mapData.lng-=d;break;case u:this.mapData.lng+=d;break;case n:this.mapData.pov.heading+=g;break;case a:this.mapData.pov.heading-=g;break;case p:this.mapData.pov.pitch+=g;break;case h:this.mapData.pov.pitch-=g;break}this.updatePosition(),this.updateViewDirection()}_setupKeyboardListeners(){document.body.addEventListener("keydown",e=>{P(e.target)||this.handleKeyboardInput(e.keyCode)})}setPosition(e,t){this.mapData&&(this.mapData.lat=e,this.mapData.lng=t,this.updatePosition())}}const R=new z;class W{constructor(){this.speechRecognition=null,this.isCurrentlyListening=!1}init(){const e=window.SpeechRecognition||window.webkitSpeechRecognition;return e?(this.speechRecognition=this._createSpeechRecognition(e),this._setupEventListeners(),this._setupKeyboardControls(),r("üé§ Voice navigation initialized - Press S to start, E to stop","VOICE"),!0):(r("‚ùå Web Speech API is not supported in this browser","ERROR"),!1)}_createSpeechRecognition(e){const t=new e,i=l.VOICE_RECOGNITION;return t.lang=i.LANGUAGE,t.continuous=i.CONTINUOUS,t.interimResults=i.INTERIM_RESULTS,t.maxAlternatives=i.MAX_ALTERNATIVES,t}_setupEventListeners(){this.speechRecognition.addEventListener("start",()=>{this.isCurrentlyListening=!0,r("üé§ Voice recognition started","VOICE")}),this.speechRecognition.addEventListener("end",()=>{this.isCurrentlyListening=!1,r("üõë Voice recognition stopped","VOICE")}),this.speechRecognition.addEventListener("error",e=>{this.isCurrentlyListening=!1,r(`‚ùó Voice recognition error: ${e.error}`,"ERROR")}),this.speechRecognition.addEventListener("result",e=>{this._handleSpeechResult(e)})}_handleSpeechResult(e){const t=e.results[e.results.length-1],i=t[0].transcript.trim().toLowerCase(),o=t[0].confidence,n=Math.round(o*100);if(r(`Heard: "${i}" (${n}%)`,"VOICE"),o<l.VOICE_RECOGNITION.CONFIDENCE_THRESHOLD){r("Low confidence, ignoring command","VOICE","gray");return}this._processVoiceCommand(i)}_processVoiceCommand(e){const t=H.filter(o=>o.regex.test(e));if(t.length===0){r('No recognized command. Try: "go forward", "turn left", "look up"',"VOICE","gray");return}const i=q();t.forEach(o=>{r(`‚úÖ ${o.label}`,"VOICE"),o.code==="STOP"?this.speechRecognition.stop():R.executeVoiceCommand(o.code,i)})}_setupKeyboardControls(){document.body.addEventListener("keyup",e=>{if(P(e.target))return;const{START_VOICE:t,STOP_VOICE:i}=l.KEYBOARD_CODES;e.keyCode===t&&!this.isCurrentlyListening?this.speechRecognition.start():e.keyCode===i&&this.isCurrentlyListening&&this.speechRecognition.stop()})}start(){this.speechRecognition&&!this.isCurrentlyListening&&this.speechRecognition.start()}stop(){this.speechRecognition&&this.isCurrentlyListening&&this.speechRecognition.stop()}}const B=new W;class Z{constructor(){this.isLocationRequested=!1}init(){return navigator.geolocation?(this._requestLocation(),!0):(r("‚ùå Geolocation is not supported by this browser","ERROR"),!1)}_requestLocation(){if(this.isLocationRequested)return;this.isLocationRequested=!0,r("üìç Detecting your location...","LOCATION");const e={enableHighAccuracy:l.GEOLOCATION.ENABLE_HIGH_ACCURACY,timeout:l.GEOLOCATION.TIMEOUT,maximumAge:l.GEOLOCATION.MAXIMUM_AGE};navigator.geolocation.getCurrentPosition(t=>this._handleLocationSuccess(t),t=>this._handleLocationError(t),e)}_handleLocationSuccess(e){const{latitude:t,longitude:i}=e.coords;try{R.init(t,i),r(`‚úÖ Location found: ${C(t,i)}`,"LOCATION")}catch(o){r(`‚ùå Failed to initialize maps with location: ${o.message}`,"ERROR")}}_handleLocationError(e){const i={1:"User denied the request for Geolocation",2:"Location information is unavailable",3:"The request to get user location timed out"}[e.code]||e.message;r(`‚ùå Unable to determine your location: ${i}`,"ERROR"),console.error("Geolocation error:",e)}}const J=new Z;class X{constructor(){this.searchInput=null}init(){return this.searchInput=document.querySelector("#search"),this.searchInput?(this._setupEventListeners(),r("üîç Search functionality initialized","SEARCH"),!0):(r("‚ùå Search input not found","ERROR"),!1)}_setupEventListeners(){this.searchInput.addEventListener("keyup",e=>{e.keyCode===l.KEYBOARD_CODES.ENTER&&this._handleSearch(e.target.value.trim())})}async _handleSearch(e){if(e=e.trim(),!!e){r(`üîé Searching for: "${e}"`,"SEARCH");try{const t=Y(e,l.API.GOOGLE_MAPS.API_KEY),i=await this._fetchGeocodingData(t);i&&this._processGeocodingResult(i)}catch(t){r(`Geocoding fetch error: ${t.message}`,"ERROR")}}}async _fetchGeocodingData(e){const t=await fetch(e);return t.status===429?(r("Geocoding API rate limit exceeded. Please try again later.","ERROR"),null):t.ok?t.json():(r(`Geocoding API error: ${t.statusText}`,"ERROR"),null)}_processGeocodingResult(e){if(e.status==="OK"&&e.results.length>0){const t=e.results[0].geometry.location;r(`‚úÖ Found: ${C(t.lat,t.lng)}`,"SEARCH"),R.mapData?R.setPosition(t.lat,t.lng):R.init(t.lat,t.lng)}else r(`Geocoding: ${e.status}`,"SEARCH","gray")}}const Q=new X;class ee{constructor(){this.loader=new f({apiKey:l.API.GOOGLE_MAPS.API_KEY,version:l.API.GOOGLE_MAPS.VERSION,libraries:[]}),this.isInitialized=!1}async init(){if(this.isInitialized){r("‚ö†Ô∏è App already initialized","SYSTEM","gray");return}try{r("üöÄ Starting Voice Navigation App...","SYSTEM"),await this._loadGoogleMapsAPI(),this._initializeModules(),this.isInitialized=!0,r("üéâ Voice Navigation App ready!","SYSTEM")}catch(e){throw r(`‚ùå Failed to initialize app: ${e.message}`,"ERROR"),console.error("App initialization error:",e),e}}async _loadGoogleMapsAPI(){r("üì¶ Loading Google Maps API...","SYSTEM"),await this.loader.load();const e=l.API.GOOGLE_MAPS.LIBRARIES;await Promise.all(e.map(t=>google.maps.importLibrary(t))),r("‚úÖ Google Maps API loaded successfully","SYSTEM")}_initializeModules(){r("üîß Initializing modules...","SYSTEM"),x();const e={location:J.init(),search:Q.init(),voice:B.init()};Object.entries(e).forEach(([t,i])=>{i||r(`‚ö†Ô∏è ${t} module failed to initialize`,"SYSTEM","gray")})}}const te=new ee;te.init().catch(s=>{console.error("Fatal error during app initialization:",s)});
